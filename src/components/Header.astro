---
// src/components/Header.astro
export interface Props {
  suburbs: Array<{ name: string }>;
}
const { suburbs } = Astro.props;
import { Image } from 'astro:assets';
import logoImg from '~/assets/images/logo.svg'; // Adjust as needed
const DEFAULT_SUBURB_DISPLAY = "Redbank Plains";
---

<header
  id="main-header"
  class="
    sticky top-0 z-50
    shadow-md
    bg-gradient-to-r from-white via-[#e0f2fe] to-[#0c2f5a]
    dark:from-slate-200 dark:via-[#94a3b8] dark:to-[#0c2f5a]
    backdrop-blur-lg
    transition-all duration-300
  "
>
  <nav class="container mx-auto px-4 sm:px-6 py-3 flex justify-between items-center">
    <!-- Logo: crisp, centered, with deep shadow and blue border -->
    <a
      href="/"
      class="flex items-center gap-2 group"
      aria-label="One N Done Bond Clean Home"
    >
      <span
        class="
          inline-flex items-center justify-center
          bg-white/95
          rounded-full
          shadow-2xl
          border-2 border-sky-100
          p-1
          ring-2 ring-white ring-offset-2
          transition-all
          group-hover:scale-105
          group-hover:shadow-[0_4px_32px_0_rgba(14,165,233,0.30)]
        "
        style="box-shadow: 0 6px 24px 0 rgba(12,47,90,0.30), 0 1.5px 6px 0 rgba(14,165,233,0.11);"
      >
        <Image
          src={logoImg}
          alt="One N Done Bond Clean Logo"
          class="h-12 w-12 md:h-14 md:w-14"
          width={56}
          height={56}
          fetchpriority="high"
          style="display: block; margin: 0 auto;"
        />
      </span>
      <span class="sr-only md:not-sr-only font-extrabold text-deep-navy text-xl">One N Done</span>
    </a>

    <!-- Desktop Navigation -->
    <div class="hidden lg:flex items-center gap-6">
      <!-- Location Section -->
      <div class="flex items-center gap-3 bg-light-sky/70 px-4 py-2 rounded-full shadow-sm">
        <svg class="w-5 h-5 text-fresh-sky" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
        </svg>
        <span id="current-suburb-display" class="text-gray-700">
          Serving <span id="current-suburb" class="font-semibold text-deep-navy">{DEFAULT_SUBURB_DISPLAY}</span>
        </span>
        <div class="suburb-selector relative">
          <select id="suburb-selector-desktop" aria-label="Select your suburb" class="appearance-none bg-transparent pl-2 pr-6 py-1 text-gray-700 cursor-pointer focus:outline-none border-l border-gray-300">
            {suburbs.map((suburb) => (
              <option value={suburb.name}>{suburb.name}</option>
            ))}
          </select>
          <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-1 text-fresh-sky">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </div>
        </div>
      </div>

      <!-- Navigation Links -->
      <div class="flex items-center gap-6 font-medium">
        <a href="/#difference"
          class="relative px-2 py-1 text-deep-navy transition-all duration-150 ease-in-out
          after:absolute after:left-0 after:bottom-0 after:h-[2px] after:w-0 after:bg-fresh-sky after:transition-all after:duration-200 after:rounded-full
          hover:text-fresh-sky focus:text-fresh-sky
          hover:after:w-full focus:after:w-full"
        >The Difference</a>
        <a href="/#services"
          class="relative px-2 py-1 text-deep-navy transition-all duration-150 ease-in-out
          after:absolute after:left-0 after:bottom-0 after:h-[2px] after:w-0 after:bg-fresh-sky after:transition-all after:duration-200 after:rounded-full
          hover:text-fresh-sky focus:text-fresh-sky
          hover:after:w-full focus:after:w-full"
        >Services</a>
        <a href="/#about"
          class="relative px-2 py-1 text-deep-navy transition-all duration-150 ease-in-out
          after:absolute after:left-0 after:bottom-0 after:h-[2px] after:w-0 after:bg-fresh-sky after:transition-all after:duration-200 after:rounded-full
          hover:text-fresh-sky focus:text-fresh-sky
          hover:after:w-full focus:after:w-full"
        >About Us</a>
      </div>

      <!-- CTA Button -->
      <a href="#quote"
        class="bg-fresh-sky hover:bg-deep-navy text-white font-bold py-2 px-5 rounded-full shadow transition-colors duration-300 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-fresh-sky whitespace-nowrap"
      >
        Get a Quote
      </a>
    </div>

    <!-- Mobile Menu Button -->
    <div class="lg:hidden flex items-center">
      <button
        id="mobile-menu-toggle"
        type="button"
        class="text-deep-navy hover:text-fresh-sky focus:outline-none focus:text-fresh-sky"
        aria-expanded="false"
        aria-label="Toggle navigation menu"
        aria-controls="mobile-menu"
      >
        <svg id="menu-icon-open" class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
        <svg id="menu-icon-close" class="w-6 h-6 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
  </nav>

  <!-- Mobile Menu (hidden by default) -->
  <div id="mobile-menu" class="lg:hidden hidden bg-[#0c2f5a] text-white shadow-lg">
    <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3">
      <!-- Location Section for Mobile -->
      <div class="flex flex-col gap-2 p-3 bg-light-sky/90 rounded-lg mb-2">
        <div class="flex items-center gap-2 text-gray-800">
          <svg class="w-5 h-5 text-fresh-sky flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
          </svg>
          <span id="mobile-current-suburb-display">
            Serving <span id="mobile-current-suburb" class="font-semibold text-deep-navy">{DEFAULT_SUBURB_DISPLAY}</span>
          </span>
        </div>
        <div class="suburb-selector relative">
          <select id="suburb-selector-mobile" aria-label="Select your suburb (mobile)" class="w-full appearance-none bg-white pl-3 pr-8 py-2 text-gray-700 cursor-pointer focus:outline-none border border-gray-300 rounded-lg">
            {suburbs.map((suburb) => (
              <option value={suburb.name}>{suburb.name}</option>
            ))}
          </select>
          <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-fresh-sky">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </div>
        </div>
      </div>

      <!-- Navigation Links -->
      <a href="/#difference" class="block px-3 py-2 rounded-md text-base font-medium hover:bg-fresh-sky/30 focus:bg-fresh-sky/30 transition">The Difference</a>
      <a href="/#services" class="block px-3 py-2 rounded-md text-base font-medium hover:bg-fresh-sky/30 focus:bg-fresh-sky/30 transition">Services</a>
      <a href="/#about" class="block px-3 py-2 rounded-md text-base font-medium hover:bg-fresh-sky/30 focus:bg-fresh-sky/30 transition">About Us</a>
      <!-- CTA Button -->
      <a href="#quote" class="block px-3 py-2 rounded-md text-base font-medium text-white bg-fresh-sky hover:bg-deep-navy text-center mt-2 transition">Get a Quote</a>
    </div>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const menuToggle = document.getElementById('mobile-menu-toggle');
    const mobileMenu = document.getElementById('mobile-menu');
    const openIcon = document.getElementById('menu-icon-open');
    const closeIcon = document.getElementById('menu-icon-close');

    function openMenu() {
      mobileMenu.classList.remove('hidden');
      menuToggle.setAttribute('aria-expanded', 'true');
      openIcon.classList.add('hidden');
      closeIcon.classList.remove('hidden');
      document.body.classList.add('overflow-hidden');
    }
    function closeMenu() {
      mobileMenu.classList.add('hidden');
      menuToggle.setAttribute('aria-expanded', 'false');
      openIcon.classList.remove('hidden');
      closeIcon.classList.add('hidden');
      document.body.classList.remove('overflow-hidden');
    }

    menuToggle.addEventListener('click', () => {
      if (mobileMenu.classList.contains('hidden')) openMenu();
      else closeMenu();
    });

    // Optional: close on Esc key
    window.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && !mobileMenu.classList.contains('hidden')) closeMenu();
    });

    // Suburb selectors stay in sync
    const desktopSelector = document.getElementById('suburb-selector-desktop');
    const mobileSelector = document.getElementById('suburb-selector-mobile');
    function handleSuburbChange(event) {
      const val = event.target.value;
      if (desktopSelector && desktopSelector.value !== val) desktopSelector.value = val;
      if (mobileSelector && mobileSelector.value !== val) mobileSelector.value = val;
      window.dispatchEvent(new CustomEvent('suburbChanged', { detail: { name: val } }));
    }
    if (desktopSelector) desktopSelector.addEventListener('change', handleSuburbChange);
    if (mobileSelector) mobileSelector.addEventListener('change', handleSuburbChange);
  });
</script>
